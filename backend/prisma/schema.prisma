generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id           String    @id @default(uuid())
    isActive     Boolean   @default(false)
    createdAt    DateTime? @db.Timestamp()
    updatedAt    DateTime? @updatedAt @db.Timestamp()
    deletedAt    DateTime? @db.Timestamp()
    email        String    @unique @db.VarChar(256)
    fullname     String?   @db.VarChar(256)
    password     String?
    refreshToken String?
    role         Role      @default(value: USER)

    @@map("users")
}

model Client {
    id String @id @default(uuid())

    email         String?    @unique @db.VarChar(256)
    fullname      String?   @db.VarChar(256)
    fonctionality String?
    bio           String?

    plan          Subscription?      @default(value: NOPSubs)
    journals      Journal[]
    reservations  Reservation[]

    createdAt DateTime? @db.Timestamp()
    updatedAt DateTime? @updatedAt @db.Timestamp()
    deletedAt DateTime? @db.Timestamp()
    isActive  Boolean   @default(false)

    @@map("clients")
}

model Prices {
    id String @id @default(uuid())

    journalPrice Float @default(value:0)
    demiJournal  Float @default(value:0)
    monthSubscription  Float @default(value:0)
    weekSubscription  Float @default(value:0)
    meetingRoomHourly  Float @default(value:0)
    meetingRoomMonthly  Float @default(value:0)
}

model Journal {
    id String @id @default(uuid())

    isPayed       Boolean
    registredTime DateTime
    leaveTime     DateTime?
    payedAmount   Float

    clientID String?
    client   Client?   @relation(fields: [clientID], references: [id])

    createdAt DateTime? @db.Timestamp()
    updatedAt DateTime? @updatedAt @db.Timestamp()

    @@map("journals")
}


model Reservation {
    id String @id @default(uuid())

    isPayed       Boolean
    registredTime DateTime
    leaveTime     DateTime?
    payedAmount   Float

    clientID String?
    client   Client?   @relation(fields: [clientID], references: [id])

    createdAt DateTime? @db.Timestamp()
    updatedAt DateTime? @updatedAt @db.Timestamp()

    @@map("reservations")
}

enum Role {
    ADMIN
    USER
}

enum Subscription {
    NOPSubs
    Monthly
    Weekly
}
